@startuml

title __Diagramme des classes__\n


    class Arbre {
        + lienVerslePere : String
        + noeud : String
        + parenthesage : ArrayList<Arbre>
        + insertionNiveauArbre()
    }


    class Arbre.Noeud {
        ~ data : int
        ~ Noeud()
    }

  


    class GUI {
        - panel1 : JPanel
    }

  

    class GraphicInterface {
        - EnterParenthesis1 : JTextField
        - EnterParenthesis2 : JTextField
        - EnterSequence1 : JTextField
        - EnterSequence2 : JTextField
        - ParenthesingRNA1 : JTextArea
        - ParenthesingRNA2 : JTextArea
        - RNA1Tree : JTextArea
        - RNA2Tree : JTextArea
        - SequenceRNA1 : JTextArea
        - SequenceRNA2 : JTextArea
        - biggestSubTreeResult : JTextArea
        - choiceOfElementToCompare : JCheckBox
        - nameOfFile1 : JLabel
        - nameOfFile2 : JLabel
        - resultPatternResearch : JLabel
        + GraphicInterface()
        {static} + main()
        - BiggestSubtreeLauncherActionPerformed()
        - PatternResearchLaunchingButtonActionPerformed()
        - SubmitFileActionPerformed()
        - SubmitRNAActionPerformed()
        - initComponents()
    }
  

    class Strand {
        ~ parenthesing : String
        ~ sequence : String
        + Strand()
        + biggestSubstrand()
        + contains()
        + sameParenthesing()
        + sequences_et_formes_egales()
        + strandEgality()
        + testParenthesing()
        + toString()
    }
  

    class StrandBuilder {
        {static} + appariement_corrected_without_extremities()
        {static} + cutExtremities()
        {static} + firstAndLastParenthesis()
        {static} + input_brin()
        {static} + readFile()
        {static} + sequence_corrected_without_extremities()
    }
  

    class Tests {
        {static} + main()
    }
  

    class Tree {
        - children : ArrayList<Tree>
        - label : String
        + Tree()
        + Tree()
        + addChildren()
        + addPair()
        + lastChild()
        + presentInTree()
        {static} + strandToTree()
        + toString()
        + treeToParenthesis()
    }
  

  Arbre +-down- Arbre.Noeud
  Arbre.Noeud o-- Arbre.Noeud : droite
  Arbre.Noeud o-- Arbre.Noeud : gauche
  Tree o-- Tree : linkTofather



@enduml
